package com.example.chatgptcompose.data.model

/**
 * Represents a single choice in the response from the OpenAI API.
 * 
 * @property message The message that was generated
 * @property index The index of this choice in the response
 * @property finish_reason Why the model stopped generating tokens
 */
data class Choice(
    val message: ChatMessage,
    val index: Int,
    val finish_reason: String
)

/**
 * Represents usage statistics for the API call.
 * 
 * @property prompt_tokens Number of tokens in the prompt
 * @property completion_tokens Number of tokens in the generated completion
 * @property total_tokens Total number of tokens used in the request
 */
data class Usage(
    val prompt_tokens: Int,
    val completion_tokens: Int,
    val total_tokens: Int
)

/**
 * Main response structure from the OpenAI Chat API.
 * 
 * @property id The ID of the response
 * @property object Always "chat.completion"
 * @property created Timestamp of when the response was created
 * @property model The model used for the response
 * @property choices Array of choices/completions generated by the model
 * @property usage Token usage statistics
 */
data class ChatResponse(
    val id: String,
    val `object`: String,
    val created: Long,
    val model: String,
    val choices: List<Choice>,
    val usage: Usage
)
